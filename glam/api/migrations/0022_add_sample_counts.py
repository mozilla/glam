# Generated by Django 3.1.13 on 2022-02-28 14:56

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0021_fog_counts'),
    ]

    operations = [
        migrations.CreateModel(
            name='FOGAggregationView',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app_id', models.CharField(max_length=100)),
                ('channel', models.CharField(max_length=100)),
                ('version', models.CharField(max_length=100)),
                ('ping_type', models.CharField(max_length=100)),
                ('os', models.CharField(max_length=100)),
                ('build_id', models.CharField(max_length=100)),
                ('build_date', models.DateTimeField(null=True)),
                ('metric', models.CharField(max_length=200)),
                ('metric_type', models.CharField(max_length=100)),
                ('metric_key', models.CharField(blank=True, max_length=200)),
                ('client_agg_type', models.CharField(blank=True, max_length=100)),
                ('total_users', models.IntegerField()),
                ('histogram', models.TextField(blank=True, null=True)),
                ('percentiles', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'view_glam_fog_aggregation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FenixSampleCounts',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('app_id', models.CharField(max_length=100)),
                ('channel', models.CharField(max_length=100)),
                ('version', models.CharField(max_length=100)),
                ('ping_type', models.CharField(max_length=100)),
                ('build_id', models.CharField(max_length=100)),
                ('os', models.CharField(max_length=100)),
                ('metric', models.CharField(max_length=100)),
                ('key', models.CharField(max_length=100)),
                ('client_agg_type', models.CharField(max_length=100)),
                ('total_sample', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glam_fenix_sample_counts',
            },
        ),
        migrations.CreateModel(
            name='FirefoxSampleCounts',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('channel', models.IntegerField(blank=True, choices=[(1, 'nightly'), (2, 'beta'), (3, 'release')], null=True)),
                ('version', models.CharField(blank=True, max_length=100, null=True)),
                ('build_id', models.CharField(max_length=100)),
                ('os', models.CharField(max_length=100)),
                ('process', models.CharField(max_length=100)),
                ('metric', models.CharField(max_length=100)),
                ('key', models.CharField(max_length=100)),
                ('client_agg_type', models.CharField(max_length=100)),
                ('total_sample', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glam_firefox_sample_counts',
            },
        ),
        migrations.CreateModel(
            name='FOGSampleCounts',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('app_id', models.CharField(max_length=100)),
                ('channel', models.CharField(max_length=100)),
                ('version', models.CharField(max_length=100)),
                ('ping_type', models.CharField(max_length=100)),
                ('build_id', models.CharField(max_length=100)),
                ('os', models.CharField(max_length=100)),
                ('metric', models.CharField(max_length=100)),
                ('key', models.CharField(max_length=100)),
                ('client_agg_type', models.CharField(max_length=100)),
                ('total_sample', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'glam_fog_sample_counts',
            },
        ),
        migrations.AddConstraint(
            model_name='fogsamplecounts',
            constraint=models.UniqueConstraint(fields=('app_id', 'channel', 'version', 'ping_type', 'build_id', 'os', 'key', 'metric', 'client_agg_type'), name='fog_sample_counts_unique_dimensions'),
        ),
        migrations.AddConstraint(
            model_name='firefoxsamplecounts',
            constraint=models.UniqueConstraint(fields=('channel', 'version', 'build_id', 'os', 'metric', 'process', 'key', 'client_agg_type'), name='unique_sample_dimensions'),
        ),
        migrations.AddConstraint(
            model_name='fenixsamplecounts',
            constraint=models.UniqueConstraint(fields=('app_id', 'channel', 'version', 'ping_type', 'build_id', 'os', 'key', 'metric', 'client_agg_type'), name='fenix_sample_counts_unique_dimensions'),
        ),
    ]
